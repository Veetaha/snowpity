#cloud-config

fs_setup:
  - filesystem: ${volume_fs}
    device: ${volume_device}

mounts:
  - - ${volume_device}
    - ${volume_mount_point}
    - ${volume_fs}
    - discard,nofail,defaults
    - "0"
    - "0"

groups: [docker]

users:
  - name: admin
    lock_passwd: true
    shell: /bin/bash
    ssh_authorized_keys: ["${ssh_public_key}"]
    groups: docker
    sudo: ALL=(ALL) NOPASSWD:ALL

package_update: true
package_upgrade: true
package_reboot_if_required: true
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg

write_files:
  %{~ for path, content in files ~}
  - encoding: gzip+base64
    path: ${path}
    content: ${content}
  %{~ endfor ~}

runcmd:
  - echo 'Installing docker...'

  # Installs docker and docker-compose on the server
  # Based on instructions from https://docs.docker.com/engine/install/ubuntu/
  # and several github gists from here and there

  - export DOCKER_GPG=/etc/apt/keyrings/docker.gpg
  - export DOCKER_URL=https://download.docker.com/linux/ubuntu
  - mkdir -p /etc/apt/keyrings
  - curl --retry 5 --retry-connrefused -fsSL $DOCKER_URL/gpg | gpg --dearmor -o $DOCKER_GPG
  - 'echo "deb [arch=$(dpkg --print-architecture) signed-by=$DOCKER_GPG] $DOCKER_URL $(lsb_release -cs) stable"
    | tee /etc/apt/sources.list.d/docker.list > /dev/null'
  - apt-get update -y
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  - systemctl start docker
  - systemctl enable docker

  # Log in to be able to pull the image from the private dockerhub repo in development workspace
  # `runuser` is required here, because `docker login` stores the creds in $HOME
  # and our systemd service will run on behalf of `admin` user
  - runuser -u admin -- docker login --username ${docker_username} --password ${docker_password}

  - echo 'Installing grafana-agent...'

  # GA stands for grafana agent
  # The installation steps were taken from the script in grafana/agent repo:
  # <https://github.com/grafana/agent/blob/c07d3875cb402719e6003fefe694f26606ebb5d3/production/grafanacloud-install.sh#L1>

  - export GA_RELEASE_VERSION="0.29.0"
  - export GA_RELEASE_URL="https://github.com/grafana/agent/releases/download/v$GA_RELEASE_VERSION"
  - export GA_DEB_URL="$GA_RELEASE_URL/grafana-agent-$GA_RELEASE_VERSION-1.amd64.deb"

  - curl --retry 5 --retry-connrefused -L --progress-bar $GA_DEB_URL -o $HOME/grafana-agent.deb

  # `confold` is used because `write_files` module stores `grafana-agent.yaml`
  # before this installation script is running, therefore `dpkg` has to use the "old config"
  - sudo dpkg -i --force-confold $HOME/grafana-agent.deb
  - rm $HOME/grafana-agent.deb
  - sudo systemctl enable grafana-agent.service
  - sudo systemctl start grafana-agent.service

  - echo 'Initializing postgres data directory if needed...'
  - mkdir -p ${pgdata}

  # Enable systemd services responsible for managing Docker Compose services
  - systemctl enable --now veebot-tg.service
