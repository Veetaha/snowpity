services:
  tg_bot:
    image: ${TG_BOT_IMAGE_NAME-veetaha/snowpity-tg-dev}:${TG_BOT_IMAGE_TAG-latest}
    env_file: .env
    user: "${CURRENT_UID:?'Please run as follows: CURRENT_UID=$$(id -u):$$(id -g) docker ...'}"
    build: .
    environment:
      DATABASE_URL: postgres://snowpity:${PG_PASSWORD}@pg:5432/snowpity
    volumes:
      - /proc/stat:/proc/stat:ro
      - /proc/meminfo:/proc/meminfo:ro

    ports: ["3000:3000"]

    # We are listening only for Ctrl-C
    stop_signal: SIGINT

    networks: [ pg ]
    depends_on: [ pg ]

  pg:
    image: postgres:15
    user: "${CURRENT_UID:?'Please run as follows: CURRENT_UID=$$(id -u):$$(id -g) docker ...'}"
    environment:
      POSTGRES_USER: snowpity
      POSTGRES_DB: snowpity
      POSTGRES_PASSWORD: ${PG_PASSWORD}

    volumes:
      - ${PG_DATA:-./data/postgres}:/var/lib/postgresql/data
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro

    ports: ["5432:5432"]

    networks: [ pg ]

  pgadmin:
    image: dpage/pgadmin4:6.16
    environment:
      PGADMIN_DEFAULT_EMAIL: snowpity@snowpity.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-snowpity}

    ports: ["5000:80"]

    volumes:
      - ./pgadmin4/servers.json:/pgadmin4/servers.json:ro

    # Create the `/pgpass` file in pgadmin's storage directory.
    # The files in that directory are required to be owned by pgadmin user.
    entrypoint: >
      /bin/sh -c "
      mkdir -p -m 700                            /var/lib/pgadmin/storage/snowpity_snowpity.com;
      chown -R pgadmin:pgadmin                   /var/lib/pgadmin/storage/snowpity_snowpity.com;
      echo 'pg:5432:*:snowpity:${PG_PASSWORD}' > /var/lib/pgadmin/storage/snowpity_snowpity.com/pgpass;
      chmod 600                                  /var/lib/pgadmin/storage/snowpity_snowpity.com/pgpass;
      /entrypoint.sh
      "

    networks: [ pg ]
    depends_on: [ pg ]

networks:
  pg:
